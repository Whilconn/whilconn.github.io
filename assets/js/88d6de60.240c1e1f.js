"use strict";(self.webpackChunkwhilconn_github_io=self.webpackChunkwhilconn_github_io||[]).push([[45759],{3905:(t,e,n)=>{n.d(e,{Zo:()=>p,kt:()=>g});var r=n(67294);function l(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function a(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?a(Object(n),!0).forEach((function(e){l(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function u(t,e){if(null==t)return{};var n,r,l=function(t,e){if(null==t)return{};var n,r,l={},a=Object.keys(t);for(r=0;r<a.length;r++)n=a[r],e.indexOf(n)>=0||(l[n]=t[n]);return l}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(r=0;r<a.length;r++)n=a[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(l[n]=t[n])}return l}var i=r.createContext({}),c=function(t){var e=r.useContext(i),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},p=function(t){var e=c(t.components);return r.createElement(i.Provider,{value:e},t.children)},s="mdxType",m={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},k=r.forwardRef((function(t,e){var n=t.components,l=t.mdxType,a=t.originalType,i=t.parentName,p=u(t,["components","mdxType","originalType","parentName"]),s=c(n),k=l,g=s["".concat(i,".").concat(k)]||s[k]||m[k]||a;return n?r.createElement(g,o(o({ref:e},p),{},{components:n})):r.createElement(g,o({ref:e},p))}));function g(t,e){var n=arguments,l=e&&e.mdxType;if("string"==typeof t||l){var a=n.length,o=new Array(a);o[0]=k;var u={};for(var i in e)hasOwnProperty.call(e,i)&&(u[i]=e[i]);u.originalType=t,u[s]="string"==typeof t?t:l,o[1]=u;for(var c=2;c<a;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}k.displayName="MDXCreateElement"},15741:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>i,contentTitle:()=>o,default:()=>s,frontMatter:()=>a,metadata:()=>u,toc:()=>c});var r=n(87462),l=(n(67294),n(3905));const a={authors:["Whilconn"],tags:["\u6808","\u6570\u7ec4","\u52a8\u6001\u89c4\u5212","\u5355\u8c03\u6808"],date:new Date("2022-10-28T00:00:00.000Z")},o=void 0,u={permalink:"/algorithm/2022/10/28/907.\u5b50\u6570\u7ec4\u7684\u6700\u5c0f\u503c\u4e4b\u548c",source:"@site/algorithm/2022/10/28/907.\u5b50\u6570\u7ec4\u7684\u6700\u5c0f\u503c\u4e4b\u548c.md",title:"907.\u5b50\u6570\u7ec4\u7684\u6700\u5c0f\u503c\u4e4b\u548c",description:"1\u3001\u9898\u5e72",date:"2022-10-28T00:00:00.000Z",formattedDate:"2022\u5e7410\u670828\u65e5",tags:[{label:"\u6808",permalink:"/algorithm/tags/\u6808"},{label:"\u6570\u7ec4",permalink:"/algorithm/tags/\u6570\u7ec4"},{label:"\u52a8\u6001\u89c4\u5212",permalink:"/algorithm/tags/\u52a8\u6001\u89c4\u5212"},{label:"\u5355\u8c03\u6808",permalink:"/algorithm/tags/\u5355\u8c03\u6808"}],readingTime:1.14,hasTruncateMarker:!1,authors:[{name:"Whilconn",url:"https://github.com/Whilconn",key:"Whilconn"}],frontMatter:{authors:["Whilconn"],tags:["\u6808","\u6570\u7ec4","\u52a8\u6001\u89c4\u5212","\u5355\u8c03\u6808"],date:"2022-10-28T00:00:00.000Z"},prevItem:{title:"481.\u795e\u5947\u5b57\u7b26\u4e32",permalink:"/algorithm/2022/10/31/481.\u795e\u5947\u5b57\u7b26\u4e32"},nextItem:{title:"\u9762\u8bd5\u9898 01.05.\u4e00\u6b21\u7f16\u8f91",permalink:"/algorithm/2022/05/13/\u9762\u8bd5\u9898 01.05.\u4e00\u6b21\u7f16\u8f91"}},i={authorsImageUrls:[void 0]},c=[{value:"1\u3001\u9898\u5e72",id:"1\u9898\u5e72",level:2},{value:"\u89e3\u9898\u601d\u8def",id:"\u89e3\u9898\u601d\u8def",level:3},{value:"\u4ee3\u7801",id:"\u4ee3\u7801",level:3}],p={toc:c};function s(t){let{components:e,...n}=t;return(0,l.kt)("wrapper",(0,r.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"1\u9898\u5e72"},"1\u3001\u9898\u5e72"),(0,l.kt)("p",null,"\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 ",(0,l.kt)("code",null,"arr"),"\uff0c\u627e\u5230 ",(0,l.kt)("code",null,"min(b)"),"\xa0\u7684\u603b\u548c\uff0c\u5176\u4e2d ",(0,l.kt)("code",null,"b")," \u7684\u8303\u56f4\u4e3a ",(0,l.kt)("code",null,"arr")," \u7684\u6bcf\u4e2a\uff08\u8fde\u7eed\uff09\u5b50\u6570\u7ec4\u3002"),(0,l.kt)("p",null,"\u7531\u4e8e\u7b54\u6848\u53ef\u80fd\u5f88\u5927\uff0c\u56e0\u6b64",(0,l.kt)("strong",null," \u8fd4\u56de\u7b54\u6848\u6a21 ",(0,l.kt)("code",null,"10^9 + 7"))," \u3002"),(0,l.kt)("p",null,"\xa0"),(0,l.kt)("p",null,(0,l.kt)("strong",null,"\u793a\u4f8b 1\uff1a")),(0,l.kt)("pre",null,(0,l.kt)("strong",null,"\u8f93\u5165\uff1a"),"arr = [3,1,2,4]",(0,l.kt)("br",null),(0,l.kt)("strong",null,"\u8f93\u51fa\uff1a"),"17",(0,l.kt)("br",null),(0,l.kt)("strong",null,"\u89e3\u91ca\uff1a",(0,l.kt)("br",null)),"\u5b50\u6570\u7ec4\u4e3a",(0,l.kt)("strong",null," "),"[3]\uff0c[1]\uff0c[2]\uff0c[4]\uff0c[3,1]\uff0c[1,2]\uff0c[2,4]\uff0c[3,1,2]\uff0c[1,2,4]\uff0c[3,1,2,4]\u3002 ",(0,l.kt)("br",null),"\u6700\u5c0f\u503c\u4e3a 3\uff0c1\uff0c2\uff0c4\uff0c1\uff0c1\uff0c2\uff0c1\uff0c1\uff0c1\uff0c\u548c\u4e3a 17\u3002"),(0,l.kt)("p",null,(0,l.kt)("strong",null,"\u793a\u4f8b 2\uff1a")),(0,l.kt)("pre",null,(0,l.kt)("strong",null,"\u8f93\u5165\uff1a"),"arr = [11,81,94,43,3]",(0,l.kt)("br",null),(0,l.kt)("strong",null,"\u8f93\u51fa\uff1a"),"444",(0,l.kt)("br",null)),(0,l.kt)("p",null,"\xa0"),(0,l.kt)("p",null,(0,l.kt)("strong",null,"\u63d0\u793a\uff1a")),(0,l.kt)("ul",null,(0,l.kt)("li",null,(0,l.kt)("code",null,"1 <= arr.length <= 3 * 10",(0,l.kt)("sup",null,"4"))),(0,l.kt)("li",null,(0,l.kt)("code",null,"1 <= arr[i] <= 3 * 10",(0,l.kt)("sup",null,"4")))),(0,l.kt)("p",null,"\xa0"),(0,l.kt)("h3",{id:"\u89e3\u9898\u601d\u8def"},"\u89e3\u9898\u601d\u8def"),(0,l.kt)("p",null,"\u5355\u8c03\u6808\uff0c\u5199\u5f97\u6709\u70b9\u8d39\u529b"),(0,l.kt)("h3",{id:"\u4ee3\u7801"},"\u4ee3\u7801"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"function sumSubarrayMins(arr: number[]): number {\n  let res = 0;\n\n  function dfs(c: number) {\n    const n = arr[c];\n    let [mins, preSum] = c < arr.length - 1 ? dfs(c + 1) : [[], 0];\n\n    let count = 1;\n    while (mins.at(-1)?.at(0) >= n) {\n      const pair = mins.pop();\n      count += pair[1];\n      preSum -= pair[1] * pair[0];\n    }\n\n    mins.push([n, count]);\n    preSum = (preSum + n * count) % (1e9 + 7);\n    res = (res + preSum) % (1e9 + 7);\n\n    return [mins, preSum];\n  }\n\n  dfs(0);\n\n  return res;\n}\n")))}s.isMDXComponent=!0}}]);