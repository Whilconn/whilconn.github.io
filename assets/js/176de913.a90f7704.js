"use strict";(self.webpackChunkwhilconn_github_io=self.webpackChunkwhilconn_github_io||[]).push([[19100],{3905:(t,n,e)=>{e.d(n,{Zo:()=>p,kt:()=>g});var r=e(67294);function l(t,n,e){return n in t?Object.defineProperty(t,n,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[n]=e,t}function o(t,n){var e=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(t,n).enumerable}))),e.push.apply(e,r)}return e}function a(t){for(var n=1;n<arguments.length;n++){var e=null!=arguments[n]?arguments[n]:{};n%2?o(Object(e),!0).forEach((function(n){l(t,n,e[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(e)):o(Object(e)).forEach((function(n){Object.defineProperty(t,n,Object.getOwnPropertyDescriptor(e,n))}))}return t}function u(t,n){if(null==t)return{};var e,r,l=function(t,n){if(null==t)return{};var e,r,l={},o=Object.keys(t);for(r=0;r<o.length;r++)e=o[r],n.indexOf(e)>=0||(l[e]=t[e]);return l}(t,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)e=o[r],n.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(t,e)&&(l[e]=t[e])}return l}var i=r.createContext({}),c=function(t){var n=r.useContext(i),e=n;return t&&(e="function"==typeof t?t(n):a(a({},n),t)),e},p=function(t){var n=c(t.components);return r.createElement(i.Provider,{value:n},t.children)},s="mdxType",m={inlineCode:"code",wrapper:function(t){var n=t.children;return r.createElement(r.Fragment,{},n)}},k=r.forwardRef((function(t,n){var e=t.components,l=t.mdxType,o=t.originalType,i=t.parentName,p=u(t,["components","mdxType","originalType","parentName"]),s=c(e),k=l,g=s["".concat(i,".").concat(k)]||s[k]||m[k]||o;return e?r.createElement(g,a(a({ref:n},p),{},{components:e})):r.createElement(g,a({ref:n},p))}));function g(t,n){var e=arguments,l=n&&n.mdxType;if("string"==typeof t||l){var o=e.length,a=new Array(o);a[0]=k;var u={};for(var i in n)hasOwnProperty.call(n,i)&&(u[i]=n[i]);u.originalType=t,u[s]="string"==typeof t?t:l,a[1]=u;for(var c=2;c<o;c++)a[c]=e[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,e)}k.displayName="MDXCreateElement"},66511:(t,n,e)=>{e.r(n),e.d(n,{assets:()=>i,contentTitle:()=>a,default:()=>s,frontMatter:()=>o,metadata:()=>u,toc:()=>c});var r=e(87462),l=(e(67294),e(3905));const o={authors:["Whilconn"],tags:["\u6808","\u6570\u7ec4","\u52a8\u6001\u89c4\u5212","\u5355\u8c03\u6808"],date:"10/28/2022"},a=void 0,u={permalink:"/algorithm/2022/10/28/907.\u5b50\u6570\u7ec4\u7684\u6700\u5c0f\u503c\u4e4b\u548c",source:"@site/algorithm/2022/10/28/907.\u5b50\u6570\u7ec4\u7684\u6700\u5c0f\u503c\u4e4b\u548c.md",title:"907.\u5b50\u6570\u7ec4\u7684\u6700\u5c0f\u503c\u4e4b\u548c",description:"1\u3001\u9898\u5e72",date:"2022-10-28T00:00:00.000Z",formattedDate:"2022\u5e7410\u670828\u65e5",tags:[{label:"\u6808",permalink:"/algorithm/tags/\u6808"},{label:"\u6570\u7ec4",permalink:"/algorithm/tags/\u6570\u7ec4"},{label:"\u52a8\u6001\u89c4\u5212",permalink:"/algorithm/tags/\u52a8\u6001\u89c4\u5212"},{label:"\u5355\u8c03\u6808",permalink:"/algorithm/tags/\u5355\u8c03\u6808"}],readingTime:1.14,hasTruncateMarker:!1,authors:[{name:"Whilconn",url:"https://github.com/Whilconn",key:"Whilconn"}],frontMatter:{authors:["Whilconn"],tags:["\u6808","\u6570\u7ec4","\u52a8\u6001\u89c4\u5212","\u5355\u8c03\u6808"],date:"10/28/2022"},prevItem:{title:"481.\u795e\u5947\u5b57\u7b26\u4e32",permalink:"/algorithm/2022/10/31/481.\u795e\u5947\u5b57\u7b26\u4e32"},nextItem:{title:"\u9762\u8bd5\u9898 01.05.\u4e00\u6b21\u7f16\u8f91",permalink:"/algorithm/2022/05/13/\u9762\u8bd5\u9898 01.05.\u4e00\u6b21\u7f16\u8f91"}},i={authorsImageUrls:[void 0]},c=[{value:"1\u3001\u9898\u5e72",id:"1\u9898\u5e72",level:2},{value:"\u89e3\u9898\u601d\u8def",id:"\u89e3\u9898\u601d\u8def",level:3},{value:"\u4ee3\u7801",id:"\u4ee3\u7801",level:3}],p={toc:c};function s(t){let{components:n,...e}=t;return(0,l.kt)("wrapper",(0,r.Z)({},p,e,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"1\u9898\u5e72"},"1\u3001\u9898\u5e72"),(0,l.kt)("p",null,"\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 ",(0,l.kt)("code",null,"arr"),"\uff0c\u627e\u5230 ",(0,l.kt)("code",null,"min(b)"),"\xa0\u7684\u603b\u548c\uff0c\u5176\u4e2d ",(0,l.kt)("code",null,"b")," \u7684\u8303\u56f4\u4e3a ",(0,l.kt)("code",null,"arr")," \u7684\u6bcf\u4e2a\uff08\u8fde\u7eed\uff09\u5b50\u6570\u7ec4\u3002"),(0,l.kt)("p",null,"\u7531\u4e8e\u7b54\u6848\u53ef\u80fd\u5f88\u5927\uff0c\u56e0\u6b64",(0,l.kt)("strong",null," \u8fd4\u56de\u7b54\u6848\u6a21 ",(0,l.kt)("code",null,"10^9 + 7"))," \u3002"),(0,l.kt)("p",null,"\xa0"),(0,l.kt)("p",null,(0,l.kt)("strong",null,"\u793a\u4f8b 1\uff1a")),(0,l.kt)("pre",null,(0,l.kt)("strong",null,"\u8f93\u5165\uff1a"),"arr = [3,1,2,4]",(0,l.kt)("br",null),(0,l.kt)("strong",null,"\u8f93\u51fa\uff1a"),"17",(0,l.kt)("br",null),(0,l.kt)("strong",null,"\u89e3\u91ca\uff1a",(0,l.kt)("br",null)),"\u5b50\u6570\u7ec4\u4e3a",(0,l.kt)("strong",null," "),"[3]\uff0c[1]\uff0c[2]\uff0c[4]\uff0c[3,1]\uff0c[1,2]\uff0c[2,4]\uff0c[3,1,2]\uff0c[1,2,4]\uff0c[3,1,2,4]\u3002 ",(0,l.kt)("br",null),"\u6700\u5c0f\u503c\u4e3a 3\uff0c1\uff0c2\uff0c4\uff0c1\uff0c1\uff0c2\uff0c1\uff0c1\uff0c1\uff0c\u548c\u4e3a 17\u3002"),(0,l.kt)("p",null,(0,l.kt)("strong",null,"\u793a\u4f8b 2\uff1a")),(0,l.kt)("pre",null,(0,l.kt)("strong",null,"\u8f93\u5165\uff1a"),"arr = [11,81,94,43,3]",(0,l.kt)("br",null),(0,l.kt)("strong",null,"\u8f93\u51fa\uff1a"),"444",(0,l.kt)("br",null)),(0,l.kt)("p",null,"\xa0"),(0,l.kt)("p",null,(0,l.kt)("strong",null,"\u63d0\u793a\uff1a")),(0,l.kt)("ul",null,(0,l.kt)("li",null,(0,l.kt)("code",null,"1 <= arr.length <= 3 * 10",(0,l.kt)("sup",null,"4"))),(0,l.kt)("li",null,(0,l.kt)("code",null,"1 <= arr[i] <= 3 * 10",(0,l.kt)("sup",null,"4")))),(0,l.kt)("p",null,"\xa0"),(0,l.kt)("h3",{id:"\u89e3\u9898\u601d\u8def"},"\u89e3\u9898\u601d\u8def"),(0,l.kt)("p",null,"\u5355\u8c03\u6808\uff0c\u5199\u5f97\u6709\u70b9\u8d39\u529b"),(0,l.kt)("h3",{id:"\u4ee3\u7801"},"\u4ee3\u7801"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"function sumSubarrayMins(arr: number[]): number {\n  let res = 0;\n\n  function dfs(c: number) {\n    const n = arr[c];\n    let [mins, preSum] = c < arr.length - 1 ? dfs(c + 1) : [[], 0];\n\n    let count = 1;\n    while (mins.at(-1)?.at(0) >= n) {\n      const pair = mins.pop();\n      count += pair[1];\n      preSum -= pair[1] * pair[0];\n    }\n\n    mins.push([n, count]);\n    preSum = (preSum + n * count) % (1e9 + 7);\n    res = (res + preSum) % (1e9 + 7);\n\n    return [mins, preSum];\n  }\n\n  dfs(0);\n\n  return res;\n}\n")))}s.isMDXComponent=!0}}]);