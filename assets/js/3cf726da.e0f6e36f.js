"use strict";(self.webpackChunkwhilconn_github_io=self.webpackChunkwhilconn_github_io||[]).push([[41361],{3905:(t,e,n)=>{n.d(e,{Zo:()=>p,kt:()=>m});var l=n(67294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);e&&(l=l.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,l)}return n}function a(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function u(t,e){if(null==t)return{};var n,l,r=function(t,e){if(null==t)return{};var n,l,r={},o=Object.keys(t);for(l=0;l<o.length;l++)n=o[l],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(l=0;l<o.length;l++)n=o[l],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var i=l.createContext({}),c=function(t){var e=l.useContext(i),n=e;return t&&(n="function"==typeof t?t(e):a(a({},e),t)),n},p=function(t){var e=c(t.components);return l.createElement(i.Provider,{value:e},t.children)},k="mdxType",s={inlineCode:"code",wrapper:function(t){var e=t.children;return l.createElement(l.Fragment,{},e)}},d=l.forwardRef((function(t,e){var n=t.components,r=t.mdxType,o=t.originalType,i=t.parentName,p=u(t,["components","mdxType","originalType","parentName"]),k=c(n),d=r,m=k["".concat(i,".").concat(d)]||k[d]||s[d]||o;return n?l.createElement(m,a(a({ref:e},p),{},{components:n})):l.createElement(m,a({ref:e},p))}));function m(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var o=n.length,a=new Array(o);a[0]=d;var u={};for(var i in e)hasOwnProperty.call(e,i)&&(u[i]=e[i]);u.originalType=t,u[k]="string"==typeof t?t:r,a[1]=u;for(var c=2;c<o;c++)a[c]=n[c];return l.createElement.apply(null,a)}return l.createElement.apply(null,n)}d.displayName="MDXCreateElement"},77203:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>i,contentTitle:()=>a,default:()=>k,frontMatter:()=>o,metadata:()=>u,toc:()=>c});var l=n(87462),r=(n(67294),n(3905));const o={authors:["Whilconn"],tags:["\u6811","\u6df1\u5ea6\u4f18\u5148\u641c\u7d22","\u4e8c\u53c9\u6811"],date:"2021/12/21"},a=void 0,u={permalink:"/algorithm/2021/12/21/\u5251\u6307 Offer II 049.\u4ece\u6839\u8282\u70b9\u5230\u53f6\u8282\u70b9\u7684\u8def\u5f84\u6570\u5b57\u4e4b\u548c",source:"@site/algorithm/2021/12/21/\u5251\u6307 Offer II 049.\u4ece\u6839\u8282\u70b9\u5230\u53f6\u8282\u70b9\u7684\u8def\u5f84\u6570\u5b57\u4e4b\u548c.md",title:"\u5251\u6307 Offer II 049.\u4ece\u6839\u8282\u70b9\u5230\u53f6\u8282\u70b9\u7684\u8def\u5f84\u6570\u5b57\u4e4b\u548c",description:"1\u3001\u9898\u5e72",date:"2021-12-21T00:00:00.000Z",formattedDate:"2021\u5e7412\u670821\u65e5",tags:[{label:"\u6811",permalink:"/algorithm/tags/\u6811"},{label:"\u6df1\u5ea6\u4f18\u5148\u641c\u7d22",permalink:"/algorithm/tags/\u6df1\u5ea6\u4f18\u5148\u641c\u7d22"},{label:"\u4e8c\u53c9\u6811",permalink:"/algorithm/tags/\u4e8c\u53c9\u6811"}],readingTime:2.88,hasTruncateMarker:!1,authors:[{name:"Whilconn",url:"https://github.com/Whilconn",key:"Whilconn"}],frontMatter:{authors:["Whilconn"],tags:["\u6811","\u6df1\u5ea6\u4f18\u5148\u641c\u7d22","\u4e8c\u53c9\u6811"],date:"2021/12/21"},prevItem:{title:"\u5251\u6307 Offer II 047.\u4e8c\u53c9\u6811\u526a\u679d",permalink:"/algorithm/2021/12/21/\u5251\u6307 Offer II 047.\u4e8c\u53c9\u6811\u526a\u679d"},nextItem:{title:"419.\u7532\u677f\u4e0a\u7684\u6218\u8230",permalink:"/algorithm/2021/12/18/419.\u7532\u677f\u4e0a\u7684\u6218\u8230"}},i={authorsImageUrls:[void 0]},c=[{value:"1\u3001\u9898\u5e72",id:"1\u9898\u5e72",level:2},{value:"\u6267\u884c\u7ed3\u679c",id:"\u6267\u884c\u7ed3\u679c",level:3},{value:"\u89e3\u9898\u601d\u8def",id:"\u89e3\u9898\u601d\u8def",level:3},{value:"\u4ee3\u7801",id:"\u4ee3\u7801",level:3}],p={toc:c};function k(t){let{components:e,...o}=t;return(0,r.kt)("wrapper",(0,l.Z)({},p,o,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"1\u9898\u5e72"},"1\u3001\u9898\u5e72"),(0,r.kt)("p",null,"\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\u7684\u6839\u8282\u70b9 ",(0,r.kt)("code",null,"root")," \uff0c\u6811\u4e2d\u6bcf\u4e2a\u8282\u70b9\u90fd\u5b58\u653e\u6709\u4e00\u4e2a ",(0,r.kt)("code",null,"0")," \u5230 ",(0,r.kt)("code",null,"9")," \u4e4b\u95f4\u7684\u6570\u5b57\u3002"),(0,r.kt)("p",null,"\u6bcf\u6761\u4ece\u6839\u8282\u70b9\u5230\u53f6\u8282\u70b9\u7684\u8def\u5f84\u90fd\u4ee3\u8868\u4e00\u4e2a\u6570\u5b57\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",null,"\u4f8b\u5982\uff0c\u4ece\u6839\u8282\u70b9\u5230\u53f6\u8282\u70b9\u7684\u8def\u5f84 ",(0,r.kt)("code",null,"1 -> 2 -> 3")," \u8868\u793a\u6570\u5b57 ",(0,r.kt)("code",null,"123")," \u3002")),(0,r.kt)("p",null,"\u8ba1\u7b97\u4ece\u6839\u8282\u70b9\u5230\u53f6\u8282\u70b9\u751f\u6210\u7684 ",(0,r.kt)("strong",null,"\u6240\u6709\u6570\u5b57\u4e4b\u548c")," \u3002"),(0,r.kt)("p",null,(0,r.kt)("strong",null,"\u53f6\u8282\u70b9")," \u662f\u6307\u6ca1\u6709\u5b50\u8282\u70b9\u7684\u8282\u70b9\u3002"),(0,r.kt)("p",null,"\xa0"),(0,r.kt)("p",null,(0,r.kt)("strong",null,"\u793a\u4f8b 1\uff1a")),(0,r.kt)("img",{alt:"",src:"../../../img/num1tree.jpg"}),(0,r.kt)("pre",null,(0,r.kt)("strong",null,"\u8f93\u5165\uff1a"),"root = [1,2,3]",(0,r.kt)("br",null),(0,r.kt)("strong",null,"\u8f93\u51fa\uff1a"),"25",(0,r.kt)("br",null),(0,r.kt)("strong",null,"\u89e3\u91ca\uff1a"),(0,r.kt)("br",null),"\u4ece\u6839\u5230\u53f6\u5b50\u8282\u70b9\u8def\u5f84 ",(0,r.kt)("code",null,"1->2")," \u4ee3\u8868\u6570\u5b57 ",(0,r.kt)("code",null,"12"),(0,r.kt)("br",null),"\u4ece\u6839\u5230\u53f6\u5b50\u8282\u70b9\u8def\u5f84 ",(0,r.kt)("code",null,"1->3")," \u4ee3\u8868\u6570\u5b57 ",(0,r.kt)("code",null,"13"),(0,r.kt)("br",null),"\u56e0\u6b64\uff0c\u6570\u5b57\u603b\u548c = 12 + 13 = ",(0,r.kt)("code",null,"25")),(0,r.kt)("p",null,(0,r.kt)("strong",null,"\u793a\u4f8b 2\uff1a")),(0,r.kt)("img",{alt:"",src:"../../../img/num2tree.jpg"}),(0,r.kt)("pre",null,(0,r.kt)("strong",null,"\u8f93\u5165\uff1a"),"root = [4,9,0,5,1]",(0,r.kt)("br",null),(0,r.kt)("strong",null,"\u8f93\u51fa\uff1a"),"1026",(0,r.kt)("br",null),(0,r.kt)("strong",null,"\u89e3\u91ca\uff1a"),(0,r.kt)("br",null),"\u4ece\u6839\u5230\u53f6\u5b50\u8282\u70b9\u8def\u5f84 ",(0,r.kt)("code",null,"4->9->5")," \u4ee3\u8868\u6570\u5b57 495",(0,r.kt)("br",null),"\u4ece\u6839\u5230\u53f6\u5b50\u8282\u70b9\u8def\u5f84 ",(0,r.kt)("code",null,"4->9->1")," \u4ee3\u8868\u6570\u5b57 491",(0,r.kt)("br",null),"\u4ece\u6839\u5230\u53f6\u5b50\u8282\u70b9\u8def\u5f84 ",(0,r.kt)("code",null,"4->0")," \u4ee3\u8868\u6570\u5b57 40",(0,r.kt)("br",null),"\u56e0\u6b64\uff0c\u6570\u5b57\u603b\u548c = 495 + 491 + 40 = ",(0,r.kt)("code",null,"1026"),(0,r.kt)("br",null)),(0,r.kt)("p",null,"\xa0"),(0,r.kt)("p",null,(0,r.kt)("strong",null,"\u63d0\u793a\uff1a")),(0,r.kt)("ul",null,(0,r.kt)("li",null,"\u6811\u4e2d\u8282\u70b9\u7684\u6570\u76ee\u5728\u8303\u56f4 ",(0,r.kt)("code",null,"[1, 1000]")," \u5185"),(0,r.kt)("li",null,(0,r.kt)("code",null,"0 <= Node.val <= 9")),(0,r.kt)("li",null,"\u6811\u7684\u6df1\u5ea6\u4e0d\u8d85\u8fc7 ",(0,r.kt)("code",null,"10"))),(0,r.kt)("p",null,"\xa0"),(0,r.kt)("p",null,(0,r.kt)("meta",{charset:"UTF-8"}),"\u6ce8\u610f\uff1a\u672c\u9898\u4e0e\u4e3b\u7ad9 129\xa0\u9898\u76f8\u540c\uff1a\xa0",(0,r.kt)("a",{href:"https://leetcode-cn.com/problems/sum-root-to-leaf-numbers/"},"https://leetcode-cn.com/problems/sum-root-to-leaf-numbers/")),(0,r.kt)("h3",{id:"\u6267\u884c\u7ed3\u679c"},"\u6267\u884c\u7ed3\u679c"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"1.png",src:n(80858).Z,width:"1360",height:"484"})),(0,r.kt)("h3",{id:"\u89e3\u9898\u601d\u8def"},"\u89e3\u9898\u601d\u8def"),(0,r.kt)("p",null,"\u603b\u4f53\u601d\u8def\uff1aDFS\u9012\u5f52\u904d\u5386\u6240\u6709\u8282\u70b9\uff0c\u9012\u5f52\u51fd\u6570\u589e\u52a0\u4e00\u4e2a\u5f62\u53c2",(0,r.kt)("inlineCode",{parentName:"p"},"path"),"\uff0c\u7528\u4e8e\u8bb0\u5f55\u6839\u8282\u70b9\u5230\u5f53\u524d\u8282\u70b9\u8fd9\u6761\u8def\u5f84\u4e0a\u6240\u6709\u6570\u5b57\u62fc\u63a5\u6210\u7684\u5b57\u7b26\u4e32\uff0c\u6700\u540e\u628a\u6240\u6709",(0,r.kt)("inlineCode",{parentName:"p"},"path"),"\u8f6c\u6210\u6570\u5b57\u5e76\u7d2f\u52a0\u5373\u53ef\u3002"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/3Etpl5/solution/cong-gen-jie-dian-dao-xie-jie-dian-de-lu-nv9q/"},"\u5b98\u89e3"),"\u76f4\u63a5\u4f7f\u752810\u8fdb\u5236\u8ba1\u7b97\uff0c\u65f6\u957f\u548c\u5185\u5b58\u90fd\u4f1a\u4f4e\u4e00\u4e9b\u3002\u8fd9\u4e2a\u89e3\u6cd5\u601d\u8def\u7b97\u7b80\u5355\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e5f\u8ddf\u5b98\u89e3\u4e00\u6837\uff0c\u4f46\u6267\u884c\u65f6\u957f\u548c\u5185\u5b58\u6d88\u8017\u7565\u9ad8\uff0c\u95ee\u9898\u4e3b\u8981\u5728\u4ee5\u4e0b\u4e24\u70b9\uff1a"),(0,r.kt)("ul",{parentName:"blockquote"},(0,r.kt)("li",{parentName:"ul"},"\u65f6\u95f4\u4e3b\u8981\u6d88\u8017\u5728\uff1a",(0,r.kt)("inlineCode",{parentName:"li"},"paths.push()"),"\u3001\u5b57\u7b26\u4e32\u7d2f\u52a0\u3001\u6700\u540e\u591a\u4e86\u4e00\u6b65",(0,r.kt)("inlineCode",{parentName:"li"},"paths"),"\u8f6c\u6362\u7d2f\u52a0"),(0,r.kt)("li",{parentName:"ul"},"\u5185\u5b58\u4e3b\u8981\u6d88\u8017\u5728\uff1a\u5b58\u50a8",(0,r.kt)("inlineCode",{parentName:"li"},"paths"),"\u3001\u6bcf\u4e2a",(0,r.kt)("inlineCode",{parentName:"li"},"dfs"),"\u8c03\u7528\u6808\u7684\u5b57\u7b26\u4e32\u5f62\u53c2",(0,r.kt)("inlineCode",{parentName:"li"},"path"),"\u3001\u672b\u5c3e\u7684",(0,r.kt)("inlineCode",{parentName:"li"},"paths.reduce"),"\u7684\u56de\u8c03\u51fd\u6570\u7684\u8c03\u7528\u6808\u7a7a\u95f4"))),(0,r.kt)("h3",{id:"\u4ee3\u7801"},"\u4ee3\u7801"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"var sumNumbers = function (root) {\n    const paths = [];\n    function dfs(node, path) {\n        if (!node) return;\n        if (!node.left && !node.right) paths.push(path + node.val);\n        dfs(node.left, path + node.val);\n        dfs(node.right, path + node.val);\n    }\n    dfs(root, '');\n    return paths.reduce((acc, cur) => +cur + acc, 0);\n};\n")))}k.isMDXComponent=!0},80858:(t,e,n)=>{n.d(e,{Z:()=>l});const l=n.p+"assets/images/1640078980-vgiVsx-1-e9bf873fe8f8fb40f420d168c216ae91.png"}}]);