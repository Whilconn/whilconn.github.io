"use strict";(self.webpackChunkwhilconn_github_io=self.webpackChunkwhilconn_github_io||[]).push([[62806],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>g});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=r.createContext({}),u=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=u(e.components);return r.createElement(i.Provider,{value:t},e.children)},p="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=u(n),m=o,g=p["".concat(i,".").concat(m)]||p[m]||f[m]||a;return n?r.createElement(g,l(l({ref:t},s),{},{components:n})):r.createElement(g,l({ref:t},s))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=m;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c[p]="string"==typeof e?e:o,l[1]=c;for(var u=2;u<a;u++)l[u]=n[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},71700:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>c,toc:()=>u});var r=n(87462),o=(n(67294),n(3905));const a={authors:["Whilconn"],tags:["\u6d4f\u89c8\u5668","\u4ee3\u7406"]},l=void 0,c={permalink:"/blog/2022/06/20/\u6d4f\u89c8\u5668\u4ee3\u7406",source:"@site/blog/2022/06/20/\u6d4f\u89c8\u5668\u4ee3\u7406.md",title:"\u6d4f\u89c8\u5668\u4ee3\u7406",description:"1\u3001\u80cc\u666f",date:"2022-06-20T00:00:00.000Z",formattedDate:"2022\u5e746\u670820\u65e5",tags:[{label:"\u6d4f\u89c8\u5668",permalink:"/blog/tags/\u6d4f\u89c8\u5668"},{label:"\u4ee3\u7406",permalink:"/blog/tags/\u4ee3\u7406"}],readingTime:7.64,hasTruncateMarker:!0,authors:[{name:"Whilconn",url:"https://github.com/Whilconn",key:"Whilconn"}],frontMatter:{authors:["Whilconn"],tags:["\u6d4f\u89c8\u5668","\u4ee3\u7406"]},prevItem:{title:"\u8c03\u8bd5\u5206\u6790yarn\u5b58\u57286\u5e74\u7684bug",permalink:"/blog/2022/11/04/\u8c03\u8bd5\u5206\u6790yarn\u5b58\u57286\u5e74\u7684bug"}},i={authorsImageUrls:[void 0]},u=[{value:"1\u3001\u80cc\u666f",id:"1\u80cc\u666f",level:2}],s={toc:u};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"1\u80cc\u666f"},"1\u3001\u80cc\u666f"),(0,o.kt)("p",null,"\u4ee5\u524d\u6211\u8ba4\u4e3a\uff0c\u53ea\u8981\u5f00\u542f\u4ee3\u7406\uff0c\u672c\u5730\u6240\u6709\u8bf7\u6c42\u90fd\u4f1a\u5148\u7ecf\u8fc7\u4ee3\u7406\u518d\u8bbf\u95ee\u7f51\u7edc\u8d44\u6e90\u3002\u76f4\u5230\u8fd9\u4e24\u5929\uff0c\u7528 ",(0,o.kt)("inlineCode",{parentName:"p"},"Node.js")," \u8bbf\u95ee ",(0,o.kt)("inlineCode",{parentName:"p"},"Google")," \u51fa\u73b0\u62a5\u9519\u3002"),(0,o.kt)("p",null,"\u4ee3\u7801\u957f\u8fd9\u6837\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"const chalk = require('chalk');\nconst axios = require('axios');\n\nconst url = 'https://www.google.com';\n\naxios\n  .get(url)\n  .then((a) => {\n    console.log(chalk.green(`Request ${url} finish, status: ${a.status}.`));\n  })\n  .catch((e) => {\n    console.log(chalk.red(`Request ${url} error!\\nMessage: ${e.message}.`));\n  });\n")))}p.isMDXComponent=!0}}]);